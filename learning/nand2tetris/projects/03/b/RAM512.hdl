// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM512.hdl
/**
 * Memory of 512 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[0..2], a=Da, b=Db, c=Dc, d=Dd, e=De, f=Df, g=Dg, h=Dh);

    RAM64(in=in, load=Da, address=address[3..8], out=memA);
    RAM64(in=in, load=Db, address=address[3..8], out=memB);
    RAM64(in=in, load=Dc, address=address[3..8], out=memC);
    RAM64(in=in, load=Dd, address=address[3..8], out=memD);
    RAM64(in=in, load=De, address=address[3..8], out=memE);
    RAM64(in=in, load=Df, address=address[3..8], out=memF);
    RAM64(in=in, load=Dg, address=address[3..8], out=memG);
    RAM64(in=in, load=Dh, address=address[3..8], out=memH);

    Mux8Way16(a=memA, b=memB, c=memC, d=memD, e=memE, f=memF, g=memG, h=memH, sel=address[0..2], out=out);
}
